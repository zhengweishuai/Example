apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// 不需要寻找控件，也就不需要生成R2，所以无需添加plugin
// apply plugin: 'com.jakewharton.butterknife'
android {
    dataBinding {
        enabled true
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "IS_DEBUG", "false")
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "IS_DEBUG", "true")
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "androidx.appcompat:appcompat:$rootProject.ext.appcompat"
    api "com.jakewharton:butterknife:$rootProject.ext.butterknife"
    // 仅在BaseActivity中bind，不需要寻找控件，也就不需要生成java文件，无需使用annotationProcessor
    api "com.gyf.immersionbar:immersionbar:$rootProject.ext.immersionbar"
    api "com.github.bumptech.glide:glide:$rootProject.ext.glide"
//    api "com.github.CymChad:BaseRecyclerViewAdapterHelper:$rootProject.ext.adapterhelper"
    //log
    api "com.orhanobut:logger:$rootProject.ext.logger"
    // retrofit
    api "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    //retrofit添加Json解析返回数据
    api "com.squareup.retrofit2:converter-gson:$rootProject.ext.gson"
    //Rxjava 结合使用
    api "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.ext.rxjava"
    //RxJava生命周期感知
    api "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.ext.rxlifecycle"
    //kt
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //lifecycle
    api "androidx.lifecycle:lifecycle-extensions:$rootProject.ext.lifecycle"
    //协程支持
    api "androidx.lifecycle:lifecycle-runtime:$rootProject.ext.lifecycle"
    // liveData支持
    api "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle"
    // viewModel支持
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle"
    //协程
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"
    api "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.coroutines_adapter"
    // 基础依赖包，必须要依赖
    implementation "com.gyf.immersionbar:immersionbar:$rootProject.immersionbar"
    // kotlin扩展（可选）
    api "com.gyf.immersionbar:immersionbar-ktx:$rootProject.immersionbar"
    //刷新加载
    api "com.scwang.smart:refresh-layout-kernel:$rootProject.refresh"
    api "com.scwang.smart:refresh-footer-classics:$rootProject.refresh"
    api "com.scwang.smart:refresh-header-classics:$rootProject.refresh"
    api "com.lxj:xpopup:$rootProject.xpopup"
    api 'com.qmuiteam:qmui:2.0.0-alpha10'
}
