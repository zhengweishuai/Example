apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    def API_HOST_PRODUCT = "\"https://api.pinlaninfo.com/\""
    def API_HOST_DEVELOP = "\"http:192.168.3.125:9024/\""
    dataBinding {
        enabled = true
    }

    compileSdkVersion AndroidVersion.compileSdkVersion
    defaultConfig {
        minSdkVersion AndroidVersion.minSdkVersion
        targetSdkVersion AndroidVersion.targetSdkVersion
        versionCode AndroidVersion.versionCode
        versionName AndroidVersion.versionName
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }
    compileOptions {
        // ButterKnife 需要Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        debug {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file("file://" + project.rootDir.absolutePath + "/keystore/weis.jks")
            storePassword RELEASE_STORE_PASSWORD
        }
        release {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file("file://" + project.rootDir.absolutePath + "/keystore/weis.jks")
            storePassword RELEASE_STORE_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true // Zipalign优化
            shrinkResources true // 移除无用的resource文件
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", "${API_HOST_PRODUCT}")
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false // Zipalign优化
            shrinkResources false  // 移除无用的resource文件
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "API_HOST", "${API_HOST_DEVELOP}")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':base')
    implementation LibDeps.constraintlayout
    //导航插件
    implementation LibDeps.navigationFragmentKts
    implementation LibDeps.navigationUiKts
    implementation LibDeps.autosize
}
